# library(devtools)
# install_github("jan-lukas-wermuth/RCor")
library(RCor)
invisible(lapply(list.files(here("code/functions"), pattern = "\\.R$", full.names = TRUE), source)) # Load all the functions
# Parameter Specification ------------------------------------------------
MC <- 1000
SampleSizes <- c(50, 200, 800)
coefficients_cont <- c("r", "tau", "rho")
coefficients_disc <- c("r", "tau", "tau_b", "gamma", "rho_b")
# Continuous IID Processes ------------------------------------------------
## Multivariate normal DGP ------------------------------------------------
alphas_Test_short <- c(-0.16, -0.08, 0, 0.08, 0.16)
pval_array_norm_iid <- array(data = NA, dim = c(length(coefficients_cont), length(SampleSizes), MC, length(alphas_Test_short)), dimnames = list(coefficients_cont, SampleSizes, 1:MC, alphas_Test_short)) # Initialize results array
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
for (coef in coefficients_cont){
for (alpha in alphas_Test_short){
for (Ti in SampleSizes){
print(c(Ti, alpha, coef))
pval_norm_iid <- foreach(i = 1:MC, .combine = 'c') %dopar% {
set.seed(i)
XY <- Gen_MvN_iid(Ti, alpha, i)
RCor::RCor(XY[,1], XY[,2], method = coef, IID = TRUE, Fisher = FALSE, Inference = TRUE)[[5]]
}
pval_array_norm_iid[coef,as.character(Ti),,as.character(alpha)] <- pval_norm_iid
}
}
}
stopCluster(cl)
save(pval_array_norm_iid, file = here("results/simulations/size_power/pval_norm_iid.RData"))
stopCluster(cl)
dimnames(pval_array_t4_iid)
dimnames(pval_array_norm_iid)
colMeans(pval_array_norm_iid["r", "50",,])
colMeans(pval_array_norm_iid["r", "50",,]<0.1)
colMeans(pval_array_norm_iid["tau", "50",,]<0.1)
colMeans(pval_array_norm_iid["rho", "50",,]<0.1)
## "Multivariate t(4)" DGP (iid) -------------------------------------------------
alphas_Test_short <- c(-0.14, -0.07, 0, 0.07, 0.14)
pval_array_t4_iid <- array(data = NA, dim = c(length(coefficients_cont), length(SampleSizes), MC, length(alphas_Test_short)), dimnames = list(coefficients_cont, SampleSizes, 1:MC, alphas_Test_short)) # Initialize results array
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
for (coef in coefficients_cont){
for (alpha in alphas_Test_short){
for (Ti in SampleSizes){
pval_t4_iid <- foreach(i = 1:MC, .combine = 'c') %dopar% {
set.seed(i)
XY <- Gen_Mvt_iid(Ti, alpha, i, 4)
RCor::RCor(XY[,1], XY[,2], method = coef, IID = TRUE, Fisher = FALSE, Inference = TRUE)[[5]]
}
pval_array_t4_iid[coef,as.character(Ti),,as.character(alpha)] <- pval_t4_iid
}
}
}
stopCluster(cl)
save(pval_array_t4_iid, file = here("results/simulations/size_power/pval_t4_iid.RData"))
## "Multivariate t(1)" DGP (iid) -------------------------------------------------
alphas_Test_short <- c(-0.07, -0.03, 0, 0.03, 0.07)
pval_array_t1_iid <- array(data = NA, dim = c(length(coefficients_cont), length(SampleSizes), MC, length(alphas_Test_short)), dimnames = list(coefficients_cont, SampleSizes, 1:MC, alphas_Test_short)) # Initialize results array
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
for (coef in coefficients_cont){
for (alpha in alphas_Test_short){
for (Ti in SampleSizes){
pval_t1_iid <- foreach(i = 1:MC, .combine = 'c') %dopar% {
set.seed(i)
XY <- Gen_Mvt_iid(Ti, alpha, i, 1)
RCor::RCor(XY[,1], XY[,2], method = coef, IID = TRUE, Fisher = FALSE, Inference = TRUE)[[5]]
}
pval_array_t1_iid[coef,as.character(Ti),,as.character(alpha)] <- pval_t1_iid
}
}
}
stopCluster(cl)
save(pval_array_t1_iid, file = here("results/simulations/size_power/pval_t1_iid.RData"))
## Normal Exponential DGP (iid) -------------------------------------------------
alphas_Test_short <- c(-0.16, -0.08, 0, 0.08, 0.16)
pval_array_Nexp_iid <- array(data = NA, dim = c(length(coefficients_cont), length(SampleSizes), MC, length(alphas_Test_short)), dimnames = list(coefficients_cont, SampleSizes, 1:MC, alphas_Test_short)) # Initialize results array
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
for (coef in coefficients_cont){
for (alpha in alphas_Test_short){
for (Ti in SampleSizes){
pval_Nexp_iid <- foreach(i = 1:MC, .combine = 'c') %dopar% {
set.seed(i)
XY <- Gen_NExp_iid(Ti, alpha, i)
RCor::RCor(XY[,1], XY[,2], method = coef, IID = TRUE, Fisher = FALSE, Inference = TRUE)[[5]]
}
pval_array_Nexp_iid[coef,as.character(Ti),,as.character(alpha)] <- pval_Nexp_iid
}
}
}
stopCluster(cl)
save(pval_array_Nexp_iid, file = here("results/simulations/size_power/pval_Nexp_iid.RData"))
# Discrete IID Processes ------------------------------------------------
## "Multivariate Poisson" DGP (iid) -------------------------------------------------
alphas_Test_short <- c(0, 0.04, 0.09)
pval_array_MvPois_iid <- array(data = NA, dim = c(length(coefficients_disc), length(SampleSizes), MC, length(alphas_Test_short)), dimnames = list(coefficients_disc, SampleSizes, 1:MC, alphas_Test_short)) # Initialize results array
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
for (coef in coefficients_disc){
for (alpha in alphas_Test_short){
for (Ti in SampleSizes){
pval_MvPois_iid <- foreach(i = 1:MC, .combine = 'c') %dopar% {
set.seed(i)
XY <- Gen_MvPois_iid(Ti, alpha, i)
RCor::RCor(XY[,1], XY[,2], method = coef, IID = TRUE, Fisher = FALSE, Inference = TRUE)[[5]]
}
pval_array_MvPois_iid[coef,as.character(Ti),,as.character(alpha)] <- pval_MvPois_iid
}
}
}
stopCluster(cl)
save(pval_array_MvPois_iid, file = here("results/simulations/size_power/pval_MvPois_iid.RData"))
## "Multivariate Zipf" DGP (iid) -------------------------------------------------
alphas_Test_short <- c(0, 0.008, 0.019)
pval_array_MvZipf_iid <- array(data = NA, dim = c(length(coefficients_disc), length(SampleSizes), MC, length(alphas_Test_short)), dimnames = list(coefficients_disc, SampleSizes, 1:MC, alphas_Test_short)) # Initialize results array
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
for (coef in coefficients_disc){
for (alpha in alphas_Test_short){
for (Ti in SampleSizes){
pval_MvZipf_iid <- foreach(i = 1:MC, .combine = 'c') %dopar% {
set.seed(i)
XY <- Gen_MvZipf_iid(Ti, alpha, i)
RCor::RCor(XY[,1], XY[,2], method = coef, IID = TRUE, Fisher = FALSE, Inference = TRUE)[[5]]
}
pval_array_MvZipf_iid[coef,as.character(Ti),,as.character(alpha)] <- pval_MvZipf_iid
}
}
}
stopCluster(cl)
save(pval_array_MvZipf_iid, file = here("results/simulations/size_power/pval_MvZipf_iid.RData"))
## "Multivariate Skellam" DGP (iid) -------------------------------------------------
alphas_Test_short <- c(-0.11, -0.055, 0, 0.055, 0.11)
pval_array_MvSkellam_iid <- array(data = NA, dim = c(length(coefficients_disc), length(SampleSizes), MC, length(alphas_Test_short)), dimnames = list(coefficients_disc, SampleSizes, 1:MC, alphas_Test_short)) # Initialize results array
cl <- makeCluster(detectCores() - 1, type = "PSOCK")
registerDoParallel(cl)
for (coef in coefficients_disc){
for (alpha in alphas_Test_short){
for (Ti in SampleSizes){
pval_MvSkellam_iid <- foreach(i = 1:MC, .combine = 'c') %dopar% {
set.seed(i)
XY <- Gen_MvSkellam_iid(Ti, alpha, i)
RCor::RCor(XY[,1], XY[,2], method = coef, IID = TRUE, Fisher = FALSE, Inference = TRUE)[[5]]
}
pval_array_MvSkellam_iid[coef,as.character(Ti),,as.character(alpha)] <- pval_MvSkellam_iid
}
}
}
stopCluster(cl)
save(pval_array_MvSkellam_iid, file = here("results/simulations/size_power/pval_MvSkellam_iid.RData"))
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
dimnames(decision_kendall_array)
decision_array_norm_iid_plot <- decision_kendall_array
save(decision_array_norm_iid_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_norm_iid_plot.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/pval_MvPois_iid.RData")
dimnames(pval_array_MvPois_iid)
dimnames(decision_array_norm_iid_plot)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
dimnames(decision_kendall_array)
decision_array_norm_iid_plot <- decision_kendall_array["0.1",,]
decision_array_norm_iid_plot <- decision_kendall_array["0.1",,,]
dimnames(decision_array_norm_iid_plot)
dim(decision_array_norm_iid_plot)
dim(decision_array_norm_iid_plot) <- c(1, dim(decision_array_norm_iid_plot))
dim(decision_array_norm_iid_plot)
dimnames(decision_array_norm_iid_plot)
dim(decision_kendall_array)
dimnames(decision_kendall_array)
decision_array_norm_iid_plot <- decision_kendall_array["0.1",,,]
dimnames(decision_array_norm_iid_plot)
new_dimnames <- c(dimnames(decision_array_norm_iid_plot), list("tau"))
new_dimnames
new_dimnames <- c(list("tau"), dimnames(decision_array_norm_iid_plot))
new_dimnames
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_Cauchy.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_BivNorm.RData")
decision_array_norm_iid_plot["r",,,]
decision_array_norm_iid_plot["r",,,,]
decision_array_norm_iid_plot["r",,]
decision_array_norm_iid_plot["tau",,]
decision_array_norm_iid_plot["tau",,,]
dimnames(decision_array_norm_iid_plot)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
decision_array_norm_iid_plot <- decision_kendall_array["0.1",,,]
dimnames(decision_array_norm_iid_plot)
new_dimnames <- c(list("tau"), dimnames(decision_array_norm_iid_plot))
new_dimnames
dim(decision_array_norm_iid_plot) <- c(1, dim(decision_array_norm_iid_plot))
dim(decision_array_norm_iid_plot)
dimnames(decision_array_norm_iid_plot) <- new_dimnames
dimnames(decision_array_norm_iid_plot)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_BivNorm.RData")
decision_array_norm_iid_plot["r",,,] <- decision_pearson_array
dim(decision_array_norm_iid_plot)
new_dimnames
new_dimnames[-1]
new_dimnames <- list("r", new_dimnames[-1])
new_dimnames
new_dimnames <- c(list("r"), dimnames(decision_array_norm_iid_plot))
new_dimnames
new_dimnames <- c(list("r"), dimnames(decision_pearson_array))
new_dimnames
decision_pearson_array <- decision_pearson_array["0.1",,,]
dimnames(decision_pearson_array)
new_dimnames <- c(list("r"), dimnames(decision_pearson_array))
new_dimnames
dim(decision_pearson_array) <- c(1, dim(decision_pearson_array))
dim(decision_pearson_array)
dimnames(decision_pearson_array) <- new_dimnames
dimnames(decision_pearson_array)
decision_array_norm_iid_plot <- abind(decision_array_norm_iid_plot, decision_pearson_array, along = 1)
dim(decision_array_norm_iid_plot)
dimnames(decision_array_norm_iid_plot)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
dimnames(decision_kendall_array)
decision_kendall_array <- decision_kendall_array["0.1",,,]
dim(decision_kendall_array)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_BivNorm.RData")
decision_pearson_array <- decision_pearson_array["0.1",,,]
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_BivNorm.RData")
decision_spearman_array <- decision_spearman_array["0.1",,,]
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
dim(decision_kendall_array)
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_norm_iid_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
library(abind)
decision_array_norm_iid_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dim(decision_array_norm_iid_plot)
dimnames(decision_array_norm_iid_plot)
dimnames(decision_array_norm_iid_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, seq(from = -0.99, to = 0.99, legth.out = 199))
seq(from = -0.99, to = 0.99, legth.out = 199)
seq(from = -0.99, to = 0.99, by = 0.01)
dimnames(decision_array_norm_iid_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, seq(from = -0.99, to = 0.99, by = 0.01))
dimnames(decision_array_norm_iid_plot)
seq(from = -0.99, to = 0.99, by = 0.01)
round(seq(from = -0.99, to = 0.99, by = 0.01), digits = 2)
dimnames(decision_array_norm_iid_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, round(seq(from = -0.99, to = 0.99, by = 0.01), digits = 2))
dimnames(decision_array_norm_iid_plot)
decision_array_norm_iid_plot["tau",,,,]
decision_array_norm_iid_plot["tau",,,]
all(decision_array_norm_iid_plot["tau",,,]==decision_kendall_array)
dim(decision_array_norm_iid_plot["tau",,,])
dim(decision_kendall_array)
dim(decision_kendall_array[,,,,])
dim(decision_kendall_array[,,,])
all(decision_array_norm_iid_plot["tau",,,]==decision_kendall_array[,,,])
all(decision_array_norm_iid_plot["tau",,,]==decision_pearson_array[,,,])
all(decision_array_norm_iid_plot["r",,,]==decision_pearson_array[,,,])
all(decision_array_norm_iid_plot["r",,,]==decision_spearman_array[,,,])
all(decision_array_norm_iid_plot["rho",,,]==decision_spearman_array[,,,])
save(decision_array_norm_iid_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_norm_iid_plot.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_Cauchy.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_Cauchy.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_Cauchy.RData")
decision_kendall_array["0.1",,,]
decision_kendall_array <- decision_kendall_array["0.1",,,]
decision_pearson_array <- decision_pearson_array["0.1",,,]
decision_spearman_array <- decision_spearman_array["0.1",,,]
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_cauchy_iid_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dimnames(decision_array_cauchy_iid_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, seq(from = -0.99, to = 0.99, by = 0.01))
save(decision_array_cauchy_iid_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_cauchy_iid_plot.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_zipf.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_zipf.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_zipf.RData")
decision_kendall_array <- decision_kendall_array["0.1",,,]
decision_pearson_array <- decision_pearson_array["0.1",,,]
decision_spearman_array <- decision_spearman_array["0.1",,,]
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_zipf_iid_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dimnames(decision_array_zipf_iid_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, seq(from = -0.99, to = 0.99, by = 0.01))
dimnames(decision_array_zipf_iid_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, seq(from = 0, to = 0.99, by = 0.01))
dim(decision_array_zipf_iid_plot)
seq(from = 0, to = 0.99, by = 0.01)
dim(decision_array_zipf_iid_plot)
dimnames(decision_array_zipf_iid_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = 0, to = 0.99, by = 0.01))
dimnames(decision_array_zipf_iid_plot)
save(decision_array_zipf_iid_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_zipf_iid_plot.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_norm_iid_plot.RData")
decision_array_norm_iid_plot <- seq(from = 0, to = 0.99, by = 0.01)[,,1:1000,]
decision_array_norm_iid_plot <- seq(from = 0, to = 0.99, by = 0.01)[,,as.character(1:1000),]
dim(decision_array_norm_iid_plot)
decision_array_norm_iid_plot <- decision_array_norm_iid_plot[,,1:1000,]
save(decision_array_norm_iid_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_norm_iid_plot.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_cauchy_iid_plot.RData")
decision_array_cauchy_iid_plot <- decision_array_cauchy_iid_plot[,,1:1000,]
save(decision_array_cauchy_iid_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_cauchy_iid_plot.RData")
dim(decision_array_cauchy_iid_plot)
dim(decision_array_norm_iid_plot)
dimnames(decision_array_norm_iid_plot)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_norm.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_norm.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_norm.RData")
decision_kendall_array <- decision_kendall_array["0.1",,,]
decision_pearson_array <- decision_pearson_array["0.1",,,]
decision_spearman_array <- decision_spearman_array["0.1",,,]
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_norm_TS_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dimnames(decision_array_norm_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = -0.99, to = 0.99, by = 0.01))
decision_kendall_array <- decision_kendall_array["0.1",,,]
decision_kendall_array <- decision_kendall_array["0.1",,,]
dimnames(decision_kendall_array)
dimnames(decision_array_norm_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = -0.99, to = 0.99, by = 0.01))
dimnames(decision_array_norm_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, seq(from = -0.99, to = 0.99, by = 0.01))
dim(decision_array_norm_TS_plot)
all(decision_array_norm_TS_plot["tau",,,]==decision_kendall_array[,,,])
all(decision_array_norm_TS_plot["rho",,,]==decision_spearman_array[,,,])
all(decision_array_norm_TS_plot["rho",,,]==decision_pearson_array[,,,])
save(decision_array_norm_TS_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_norm_TS_plot.RData")
decision_array_norm_TS_plot <- decision_array_norm_TS_plot[,,1:1000,]
save(decision_array_norm_TS_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_norm_TS_plot.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_cauchy.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_cauchy.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_cauchy.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_cauchy.RData")
decision_kendall_array <- decision_kendall_array["0.1",,,]
decision_pearson_array <- decision_pearson_array["0.1",,,]
decision_spearman_array <- decision_spearman_array["0.1",,,]
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_cauchy_TS_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dimnames(decision_array_cauchy_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = -0.99, to = 0.99, by = 0.01))
dimnames(decision_array_cauchy_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:10000, seq(from = -0.99, to = 0.99, by = 0.01))
decision_array_cauchy_TS_plot <- decision_array_cauchy_TS_plot[,,1:1000,]
save(decision_array_cauchy_TS_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_cauchy_TS_plot.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Kendall_TS_Zipf.RData")
dim(decision_kendall_array_combined)
dimnames(decision_kendall_array_combined)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Pearson_TS_Zipf.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Spearman_TS_Zipf.RData")
decision_kendall_array <- decision_kendall_array_combined["0.1",,1:1000,]
dim(decision_kendall_array)
decision_pearson_array <- decision_pearson_array_combined["0.1",,1:1000,]
decision_spearman_array <- decision_spearman_array_combined["0.1",,1:1000,]
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_zipf_TS_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dimnames(decision_array_norm_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = 0, to = 0.99, by = 0.01))
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_zipf_TS_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dimnames(decision_array_zipf_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = 0, to = 0.99, by = 0.01))
dimnames(decision_array_zipf_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = 0, to = 0.99, by = 0.01))
dim(decision_array_zipf_TS_plot)
dim(decision_kendall_array)
dimnames(decision_kendall_array)
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Kendall_TS_Zipf.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Pearson_TS_Zipf.RData")
load("/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Spearman_TS_Zipf.RData")
decision_kendall_array <- decision_kendall_array_combined["0.1",,1:1000,]
decision_pearson_array <- decision_pearson_array_combined["0.1",,1:1000,]decision_spearman_array <- decision_spearman_array_combined["0.1",,1:1000,]
decision_spearman_array <- decision_spearman_array_combined["0.1",,1:1000,]
dimnames(decision_kendall_array)
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_pearson_array <- decision_pearson_array_combined["0.1",,1:1000,]
dim(decision_pearson_array)
dim(decision_kendall_array)
decision_kendall_array <- decision_kendall_array[,,,]
dim(decision_kendall_array)
dim(decision_spearman_array)
decision_kendall_array <- array(decision_kendall_array, dim = c(1, dim(decision_kendall_array)))
decision_pearson_array <- array(decision_pearson_array, dim = c(1, dim(decision_pearson_array)))
decision_spearman_array <- array(decision_spearman_array, dim = c(1, dim(decision_spearman_array)))
decision_array_zipf_TS_plot <- abind(decision_kendall_array, decision_pearson_array, decision_spearman_array, along = 1)
dimnames(decision_array_zipf_TS_plot) <- list(c("tau", "r", "rho"), c("50", "200", "800"), 1:1000, seq(from = 0, to = 0.99, by = 0.01))
dimnames(decision_array_zipf_TS_plot)
save(decision_array_zipf_TS_plot, file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/results/simulations/size_power/decision_array_zipf_TS_plot.RData")
# Title:      Power (Size) Plots
# Author:     Jan-Lukas Wermuth
# Date:       2025-05-27
# Purpose:    This script loads the empirical size and power values
#             and creates power plots.
rm(list = ls())
library(ggplot2)
library(tidyr)
library(dplyr)
library(Cairo)
library(abind)
invisible(lapply(list.files(here("results/simulations/size_power"), pattern = "\\plot.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
# Title:      Power (Size) Plots
# Author:     Jan-Lukas Wermuth
# Date:       2025-05-27
# Purpose:    This script loads the empirical size and power values
#             and creates power plots.
rm(list = ls())
library(ggplot2)
library(tidyr)
library(dplyr)
library(Cairo)
library(abind)
library(here)
invisible(lapply(list.files(here("results/simulations/size_power"), pattern = "\\plot.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
invisible(lapply(list.files(here("results/simulations/true_taus"), pattern = "iid\\.RData$|tau\\.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
# Title:      Power (Size) Plots
# Author:     Jan-Lukas Wermuth
# Date:       2025-05-27
# Purpose:    This script loads the empirical size and power values
#             and creates power plots.
rm(list = ls())
library(ggplot2)
library(tidyr)
library(dplyr)
library(Cairo)
library(abind)
library(here)
invisible(lapply(list.files(here("results/simulations/size_power"), pattern = "\\plot.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
invisible(lapply(list.files(here("results/simulations/true_taus"), pattern = "iid\\.RData$|TS\\.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
gammas_MvZipf_TS
length(gammas_MvZipf_TS)
gammas_MvZipf_iid
length(gammas_MvZipf_iid)
dimnames(decision_array_zipf_iid_plot)
# Title:      Power (Size) Plots
# Author:     Jan-Lukas Wermuth
# Date:       2025-05-27
# Purpose:    This script loads the empirical size and power values
#             and creates power plots.
rm(list = ls())
library(ggplot2)
library(tidyr)
library(dplyr)
library(Cairo)
library(abind)
library(here)
invisible(lapply(list.files(here("results/simulations/size_power"), pattern = "\\plot.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
invisible(lapply(list.files(here("results/simulations/true_taus"), pattern = "iid\\.RData$|TS\\.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
# Parameter Specification -------------------------------------------------
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-0.99, 0.99, 0.01)), digits = 2)
DGPs <- c("Normal", "Cauchy", "Zipf")
size <- 10
linewidth <- 0.2
# IID: Prepare Datasets for Plotting -------------------------------------------
for (Ti in SampleSizes) {
assign(paste("data", "Zipf", Ti, sep = "_"), data.frame(cbind(t(rbind(gammas_MvZipf_iid, colMeans(decision_array_zipf_iid_plot["tau",Ti,,]), colMeans(decision_array_zipf_iid_plot["r",Ti,,]), colMeans(decision_array_zipf_iid_plot["rho",Ti,,]))), "Zipf", Ti)))
data.table::setnames(get(paste("data", "Zipf", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
assign(paste("data", "Normal", Ti, sep = "_"), data.frame(cbind(t(rbind(2/pi*asin(rhos), colMeans(decision_array_norm_iid_plot["tau",Ti,,]), colMeans(decision_array_norm_iid_plot["r",Ti,,]), colMeans(decision_array_norm_iid_plot["rho",Ti,,]))), "Normal", Ti)))
data.table::setnames(get(paste("data", "Normal", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
assign(paste("data", "Cauchy", Ti, sep = "_"), data.frame(cbind(t(rbind(taus_t1_iid, colMeans(decision_array_cauchy_iid_plot["tau",Ti,,]), colMeans(decision_array_cauchy_iid_plot["r",Ti,,]), colMeans(decision_array_cauchy_iid_plot["rho",Ti,,]))), "Cauchy", Ti)))
data.table::setnames(get(paste("data", "Cauchy", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
}
paste("data", "Zipf", Ti, sep = "_")
data_Zipf_800
gammas_MvZipf_iid
colMeans(decision_array_zipf_iid_plot["tau",Ti,,])
length(colMeans(decision_array_zipf_iid_plot["tau",Ti,,]))
2/pi*asin(rhos)
rhos <- round(head(seq(-0.99, 0.99, 0.01)), digits = 2)
rhos
# Title:      Power (Size) Plots
# Author:     Jan-Lukas Wermuth
# Date:       2025-05-27
# Purpose:    This script loads the empirical size and power values
#             and creates power plots.
rm(list = ls())
library(ggplot2)
library(tidyr)
library(dplyr)
library(Cairo)
library(abind)
library(here)
invisible(lapply(list.files(here("results/simulations/size_power"), pattern = "\\plot.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
invisible(lapply(list.files(here("results/simulations/true_taus"), pattern = "iid\\.RData$|TS\\.RData$", full.names = TRUE), function(x) load(x, envir = globalenv())))
# Parameter Specification -------------------------------------------------
SampleSizes <- c("50", "200", "800")
rhos <- round(seq(-0.99, 0.99, 0.01), digits = 2)
DGPs <- c("Normal", "Cauchy", "Zipf")
size <- 10
linewidth <- 0.2
# IID: Prepare Datasets for Plotting -------------------------------------------
for (Ti in SampleSizes) {
assign(paste("data", "Zipf", Ti, sep = "_"), data.frame(cbind(t(rbind(gammas_MvZipf_iid, colMeans(decision_array_zipf_iid_plot["tau",Ti,,]), colMeans(decision_array_zipf_iid_plot["r",Ti,,]), colMeans(decision_array_zipf_iid_plot["rho",Ti,,]))), "Zipf", Ti)))
data.table::setnames(get(paste("data", "Zipf", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
assign(paste("data", "Normal", Ti, sep = "_"), data.frame(cbind(t(rbind(2/pi*asin(rhos), colMeans(decision_array_norm_iid_plot["tau",Ti,,]), colMeans(decision_array_norm_iid_plot["r",Ti,,]), colMeans(decision_array_norm_iid_plot["rho",Ti,,]))), "Normal", Ti)))
data.table::setnames(get(paste("data", "Normal", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
assign(paste("data", "Cauchy", Ti, sep = "_"), data.frame(cbind(t(rbind(taus_t1_iid, colMeans(decision_array_cauchy_iid_plot["tau",Ti,,]), colMeans(decision_array_cauchy_iid_plot["r",Ti,,]), colMeans(decision_array_cauchy_iid_plot["rho",Ti,,]))), "Cauchy", Ti)))
data.table::setnames(get(paste("data", "Cauchy", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
}
dataset <- rbind(data_Zipf_50, data_Zipf_200, data_Zipf_800, data_Cauchy_50, data_Cauchy_200, data_Cauchy_800, data_Normal_50, data_Normal_200, data_Normal_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset$DGP <- factor(dataset$DGP, levels = c("Cauchy", "Normal", "Zipf"))
class(dataset$kendall) <- "numeric"
class(dataset$pearson) <- "numeric"
class(dataset$spearman) <- "numeric"
class(dataset$gamma) <- "numeric"
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "Power")
options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots
n_names <- c(`50` = "T = 50",
`200` = "T = 200",
`800` = "T = 800")
ggplot2::ggplot(data = dataset) +
geom_line(mapping = aes(y = value, x = gamma, color = Power)) +
annotate("point", x = 0, y = 0.1) +
facet_grid(cols = vars(DGP), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")
here("results/plots/PowerIID_CauchyNormZipf.pdf")
source("~/Documents/Dr.Wermuth/Projects/RankAutocorrelations/replication_RCor/code/SizePower_plots.R", echo=TRUE)
