
################################# Plots: Simulations #########################################
rm(list = ls())

library(ggplot2)
library(tidyr)
library(Cairo)

#### Step 1: IID processes (independence between processes (H0) and across elements within each process) -- Corollary 2
# Bivariate normal distribution: With Fisher Transformation yields identical plot
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_BivNorm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_BivNorm.RData")

alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(2/pi*asin(rhos), rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti = n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerBivNorm.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")

# T4 Distribution
rm(list = ls())

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_t4.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_t4.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_t4.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_t4.RData")

alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(taus_t4, rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerT4.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")

# Cauchy Distribution
rm(list = ls())

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_t1.RData")

alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.1), -1)[-1], digits = 2)

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(taus_t1, rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerCauchy.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")

# Discrete Distribution
rm(list = ls())

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_Pois1.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_Pois1.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_Pois1.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_Pois1.RData")

alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(0, 1, 0.1), -1), digits = 2)

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(taus_Pois1, rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + 
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerPois1.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")


######################## Plots for Time Series Processes #####################################
rm(list = ls())

library(ggplot2)
library(tidyr)
library(Cairo)

#### Step 1: IID processes (independence between processes (H0) and across elements within each process) -- Corollary 2
# normal process
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_norm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_norm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_norm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_TS_norm.RData")


alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(taus_TS_norm, rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/Power_TS_norm.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")


# t4 process
rm(list = ls())

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_t4.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_t4.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_t4.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_TS_t4.RData")

alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(taus_TS_t4, rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/Power_TS_t4.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")


# Cauchy process
rm(list = ls())

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_TS_t1.RData")

alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(taus_TS_t1, rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/Power_TS_cauchy.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")

# Discrete Process
rm(list = ls())

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_Pois1.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_Pois1.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_Pois1.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_TS_Pois1.RData")

alphas <- c("0.1", "0.05", "0.01")
SampleSizes <- c("50", "200", "800")

# Prepare datasets for plotting
for (alpha in alphas) {
  for (Ti in SampleSizes) {
    assign(paste("data", alpha, Ti, sep = "_"), data.frame(cbind(t(rbind(c(0, taus_TS_Pois1), rbind(colMeans(decision_kendall_array[alpha, Ti,,]), colMeans(decision_pearson_array[alpha, Ti,,]), colMeans(decision_spearman_array[alpha, Ti,,])))), alpha, Ti)))
    data.table::setnames(get(paste("data", alpha, Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "alpha", "Ti"))
  }
}

# Merge to one big dataset
dataset <- rbind(data_0.01_50, data_0.01_200, data_0.01_800, data_0.05_50, data_0.05_200, data_0.05_800, data_0.1_50, data_0.1_200, data_0.1_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "method")
dataset$level <- dataset$alpha
class(dataset$level) <- "numeric"
class(dataset$value) <- "numeric"
class(dataset$tau) <- "numeric"
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.1, "\u03b1 = 0.1")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.05, "\u03b1 = 0.05")
dataset$alpha <- replace(dataset$alpha, dataset$alpha == 0.01, "\u03b1 = 0.01")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = method)) +
  geom_point(mapping = aes(y = level, x = 0)) +
  facet_grid(cols = vars(alpha), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  ylab("Power") + theme_bw(base_size = size) + ylim(c(0,1)) + 
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerTSPois1.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")


## Testing plots: iid Cauchy and normal
rm(list = ls())

SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_BivNorm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_BivNorm.RData")

decision_kendall_norm <- decision_kendall_array[2,,,]
decision_pearson_norm <- decision_pearson_array[2,,,]
decision_spearman_norm <- decision_spearman_array[2,,,]

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_t1.RData")

decision_kendall_cauchy <- decision_kendall_array[2,,,]
decision_pearson_cauchy <- decision_pearson_array[2,,,]
decision_spearman_cauchy <- decision_spearman_array[2,,,]

for (Ti in SampleSizes) {
  assign(paste("data", "Norm", Ti, sep = "_"), data.frame(cbind(t(rbind(2/pi*asin(rhos), colMeans(decision_kendall_norm[Ti,,]), colMeans(decision_pearson_norm[Ti,,]), colMeans(decision_spearman_norm[Ti,,]))), "Norm", Ti)))
  data.table::setnames(get(paste("data", "Norm", Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "DGP", "Ti"))
  assign(paste("data", "Cauchy", Ti, sep = "_"), data.frame(cbind(t(rbind(taus_t1, colMeans(decision_kendall_cauchy[Ti,,]), colMeans(decision_pearson_cauchy[Ti,,]), colMeans(decision_spearman_cauchy[Ti,,]))), "Cauchy", Ti)))
  data.table::setnames(get(paste("data", "Cauchy", Ti, sep = "_")), c("tau", "kendall", "pearson", "spearman", "DGP", "Ti"))
}

# Merge to one big dataset
dataset <- rbind(data_Norm_50, data_Norm_200, data_Norm_800, data_Cauchy_50, data_Cauchy_200, data_Cauchy_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset$DGP <- factor(dataset$DGP, levels = c("Cauchy", "Norm"))
class(dataset$kendall) <- "numeric"
class(dataset$pearson) <- "numeric"
class(dataset$spearman) <- "numeric"
class(dataset$tau) <- "numeric"
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "Power")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "n = 50",
             `200` = "n = 200",
             `800` = "n = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = tau, color = Power)) +
  annotate("point", x = 0, y = 0.05) +
  facet_grid(cols = vars(DGP), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/Power_HITS_Meeting.pdf", plot = fin_plot, device = cairo_pdf, width = 10, height = 14, units = "cm")

## Testing plots: iid Cauchy and normal and Zipf
rm(list = ls())

SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/gammas_Zipf1.RData")

decision_kendall_zipf <- decision_kendall_array[1,,,]
decision_pearson_zipf <- decision_pearson_array[1,,,]
decision_spearman_zipf <- decision_spearman_array[1,,,]

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_BivNorm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_BivNorm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_BivNorm.RData")

decision_kendall_norm <- decision_kendall_array[1,,,]
decision_pearson_norm <- decision_pearson_array[1,,,]
decision_spearman_norm <- decision_spearman_array[1,,,]

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_Cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_t1.RData")

decision_kendall_cauchy <- decision_kendall_array[1,,,]
decision_pearson_cauchy <- decision_pearson_array[1,,,]
decision_spearman_cauchy <- decision_spearman_array[1,,,]

for (Ti in SampleSizes) {
  assign(paste("data", "Zipf", Ti, sep = "_"), data.frame(cbind(t(rbind(gammas_Zipf1, colMeans(decision_kendall_zipf[Ti,,]), colMeans(decision_pearson_zipf[Ti,,]), colMeans(decision_spearman_zipf[Ti,,]))), "Zipf", Ti)))
  data.table::setnames(get(paste("data", "Zipf", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
  assign(paste("data", "Normal", Ti, sep = "_"), data.frame(cbind(t(rbind(2/pi*asin(rhos), colMeans(decision_kendall_norm[Ti,,]), colMeans(decision_pearson_norm[Ti,,]), colMeans(decision_spearman_norm[Ti,,]))), "Normal", Ti)))
  data.table::setnames(get(paste("data", "Normal", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
  assign(paste("data", "Cauchy", Ti, sep = "_"), data.frame(cbind(t(rbind(taus_t1, colMeans(decision_kendall_cauchy[Ti,,]), colMeans(decision_pearson_cauchy[Ti,,]), colMeans(decision_spearman_cauchy[Ti,,]))), "Cauchy", Ti)))
  data.table::setnames(get(paste("data", "Cauchy", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
}

# Merge to one big dataset
dataset <- rbind(data_Zipf_50, data_Zipf_200, data_Zipf_800, data_Cauchy_50, data_Cauchy_200, data_Cauchy_800, data_Normal_50, data_Normal_200, data_Normal_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset$DGP <- factor(dataset$DGP, levels = c("Cauchy", "Normal", "Zipf"))
class(dataset$kendall) <- "numeric"
class(dataset$pearson) <- "numeric"
class(dataset$spearman) <- "numeric"
class(dataset$gamma) <- "numeric"
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "Power")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "T = 50",
             `200` = "T = 200",
             `800` = "T = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = gamma, color = Power)) +
  annotate("point", x = 0, y = 0.1) +
  facet_grid(cols = vars(DGP), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerIID_CauchyNormZipf.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")


# Time Series Plot
rm(list = ls())

SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_norm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_norm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_norm.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_TS_norm.RData")

decision_kendall_norm <- decision_kendall_array[1,,,]
decision_pearson_norm <- decision_pearson_array[1,,,]
decision_spearman_norm <- decision_spearman_array[1,,,]

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_TS_t1.RData")

decision_kendall_cauchy <- decision_kendall_array[1,,,]
decision_pearson_cauchy <- decision_pearson_array[1,,,]
decision_spearman_cauchy <- decision_spearman_array[1,,,]

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Kendall_TS_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Pearson_TS_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Spearman_TS_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/gammas_TS_Zipf.RData")
gammas_TS_Zipf <- gammas_TS_Zipf[1:100]

decision_kendall_zipf <- decision_kendall_array_combined[1,,,]
decision_pearson_zipf <- decision_pearson_array_combined[1,,,]
decision_spearman_zipf <- decision_spearman_array_combined[1,,,]

for (Ti in SampleSizes) {
  assign(paste("data", "Normal", Ti, sep = "_"), data.frame(cbind(t(rbind(taus_TS_norm, colMeans(decision_kendall_norm[Ti,,]), colMeans(decision_pearson_norm[Ti,,]), colMeans(decision_spearman_norm[Ti,,]))), "Normal", Ti)))
  data.table::setnames(get(paste("data", "Normal", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
  assign(paste("data", "Zipf", Ti, sep = "_"), data.frame(cbind(t(rbind(gammas_TS_Zipf, colMeans(decision_kendall_zipf[Ti,,]), colMeans(decision_pearson_zipf[Ti,,]), colMeans(decision_spearman_zipf[Ti,,]))), "Zipf", Ti)))
  data.table::setnames(get(paste("data", "Zipf", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
  assign(paste("data", "Cauchy", Ti, sep = "_"), data.frame(cbind(t(rbind(taus_TS_t1, colMeans(decision_kendall_cauchy[Ti,,]), colMeans(decision_pearson_cauchy[Ti,,]), colMeans(decision_spearman_cauchy[Ti,,]))), "Cauchy", Ti)))
  data.table::setnames(get(paste("data", "Cauchy", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
}

# Merge to one big dataset
dataset <- rbind(data_Normal_50, data_Normal_200, data_Normal_800, data_Cauchy_50, data_Cauchy_200, data_Cauchy_800, data_Zipf_50, data_Zipf_200, data_Zipf_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset$DGP <- factor(dataset$DGP, levels = c("Cauchy", "Normal", "Zipf"))
class(dataset$kendall) <- "numeric"
class(dataset$pearson) <- "numeric"
class(dataset$spearman) <- "numeric"
class(dataset$gamma) <- "numeric"
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "Power")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "T = 50",
             `200` = "T = 200",
             `800` = "T = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = gamma, color = Power)) +
  annotate("point", x = 0, y = 0.1) +
  facet_grid(cols = vars(DGP), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerTS_CauchyNormZipf.pdf", plot = fin_plot, device = cairo_pdf, width = 15, height = 15, units = "cm")

# Time Series Plot: Graph for Poster with only Cauchy and Zipf
rm(list = ls())

SampleSizes <- c("50", "200", "800")
rhos <- round(head(seq(-1, 1, 0.01), -1)[-1], digits = 2)

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Kendall_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Pearson_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/Spearman_TS_cauchy.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/taus_TS_t1.RData")

decision_kendall_cauchy <- decision_kendall_array[1,,,]
decision_pearson_cauchy <- decision_pearson_array[1,,,]
decision_spearman_cauchy <- decision_spearman_array[1,,,]

load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Kendall_TS_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Pearson_TS_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/2Series_Testing/TS_Zipf_graph/Spearman_TS_zipf.RData")
load(file = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Simulations/gammas_TS_Zipf.RData")
gammas_TS_Zipf <- gammas_TS_Zipf[1:100]

decision_kendall_zipf <- decision_kendall_array_combined[1,,,]
decision_pearson_zipf <- decision_pearson_array_combined[1,,,]
decision_spearman_zipf <- decision_spearman_array_combined[1,,,]

for (Ti in SampleSizes) {
  assign(paste("data", "Zipf", Ti, sep = "_"), data.frame(cbind(t(rbind(gammas_TS_Zipf, colMeans(decision_kendall_zipf[Ti,,]), colMeans(decision_pearson_zipf[Ti,,]), colMeans(decision_spearman_zipf[Ti,,]))), "Zipf", Ti)))
  data.table::setnames(get(paste("data", "Zipf", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
  assign(paste("data", "Cauchy", Ti, sep = "_"), data.frame(cbind(t(rbind(taus_TS_t1, colMeans(decision_kendall_cauchy[Ti,,]), colMeans(decision_pearson_cauchy[Ti,,]), colMeans(decision_spearman_cauchy[Ti,,]))), "Cauchy", Ti)))
  data.table::setnames(get(paste("data", "Cauchy", Ti, sep = "_")), c("gamma", "kendall", "pearson", "spearman", "DGP", "Ti"))
}

# Merge to one big dataset
dataset <- rbind(data_Cauchy_50, data_Cauchy_200, data_Cauchy_800, data_Zipf_50, data_Zipf_200, data_Zipf_800)
dataset$Ti <- factor(dataset$Ti, levels = c(50, 200, 800))
dataset$DGP <- factor(dataset$DGP, levels = c("Cauchy", "Zipf"))
class(dataset$kendall) <- "numeric"
class(dataset$pearson) <- "numeric"
class(dataset$spearman) <- "numeric"
class(dataset$gamma) <- "numeric"
dataset <- pivot_longer(dataset, cols = c("kendall", "pearson", "spearman"), names_to = "Power")


# Specify basic determinants for the plots
size <- 10
linewidth <- 0.2

options(ggplot2.discrete.colour= c("blue", "red", "green4")) # Specify colors for the lines in the plots

n_names <- c(`50` = "T = 50",
             `200` = "T = 200",
             `800` = "T = 800")

fin_plot <- ggplot2::ggplot(data = dataset) +
  geom_line(mapping = aes(y = value, x = gamma, color = Power)) +
  annotate("point", x = 0, y = 0.1) +
  facet_grid(cols = vars(DGP), rows = vars(Ti), labeller = labeller(Ti=n_names)) +
  theme_bw(base_size = size) + ylim(c(0,1)) + xlim(c(-0.9, 0.9)) +
  theme(axis.ticks = element_line(color = "black"), legend.position = "bottom")

ggsave(filename = "/Users/lukaswermuth/Documents/Dr.Wermuth/Projects/RankAutocorrelations/Results/Plots/PowerTS_CauchyZipf.pdf", plot = fin_plot, device = cairo_pdf, width = 10, height = 15, units = "cm")





